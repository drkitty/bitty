conditional execute
0000 00bb  ifc b
0000 01bb  ifs b

branch absolute
0000 10rr  ba 4r
0000 110r  ba 8r

logic
0000 1110  com

arithmetic
0000 1111  asr

rotate
0001 0000  rol
0001 0001  ror

rotate through C
0001 0010  rcl
0001 0011  rcr

shift
0001 0100  sl
0001 0101  sl2
0001 0110  sr
0001 0111  sr2

move indirect
0010 0rrr  mov x, (2r)
0010 1rrr  mov (2r), x
0011 00rr  mov x, (4r)
0011 01rr  mov (4r), x
0011 100r  mov x, (8r)
0011 101r  mov (8r), x

semaphore primitive
0011 110r  edec (8r)

get processor number
0011 1110  proc

0011 1111  EXTENDED INSTRUCTION

move register
0100 rrrr  mov x, r
0101 rrrr  mov r, x

logic
0110 rrrr  and r
0111 rrrr  or r

arithmetic
1000 rrrr  add r  # r = r + x
1001 rrrr  sub r  # r = r - x
1010 rrrr  adc r  # r = r + x + C
1011 rrrr  sbc r  # r = r - x - ~C

logic
1100 rrrr  xor r

move immediate
1101 kkkk  mov x, k

branch relative
111k kkkk  b k
