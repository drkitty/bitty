conditional skip (inverted)
0000 00bb  ifc b
0000 01bb  ifs b

branch absolute
0000 10rr  ba 4r
0000 110r  ba 8r

0000 1110  RESERVED
0000 1111  RESERVED

rotate
0001 0000  rol
0001 0001  ror

rotate through C
0001 0010  rcl
0001 0011  rcr

logical shift
0001 0100  lsl
0001 0101  lsl2
0001 0110  lsr
0001 0111  lsr2

move indirect
0010 00rr  mov x, (4r)
0010 01rr  mov (4r), x
0010 100r  mov x, (8r)
0010 101r  mov (8r), x

move immediate
0011 kkkk  mov x, i

move register
0100 rrrr  mov x, r
0101 rrrr  mov r, x

logic
0110 rrrr  and r
0111 rrrr  or r

arithmetic
1000 rrrr  add r
1001 rrrr  sub r
1010 rrrr  adc r
1011 rrrr  sbc r

logic
1100 rrrr  xor r

synchronization primitives
1101 00rr  up (4r)
1101 01rr  dn (4r)
1101 100r  up (8r)
1101 101r  dn (8r)

interrupt control
1101 1100  ci
1101 1101  si

logic
1101 1110  com

arithmetic (???)
1101 1111  asr

branch
111k kkkk  b k
