branch
0000 rrr0  br 2r
0000 rr01  br 4r
0000 r011  br 8r

logic
0000 0111  com

arithmetic
0000 1111  asr

shift
0001 0000  sl
0001 0001  sr

rotate through C
0001 0010  rl
0001 0011  rr

0001 01??

conditional execute
0001 10bb  ifc b
0001 11bb  ifs b

move indirect
0010 rrr0  mov x, (2r)
0010 rrr1  mov (2r), x
0011 rr00  mov x, (4r)
0011 rr10  mov (4r), x
0011 r001  mov x, (8r)
0011 r101  mov (8r), x

semaphore primitive
0011 r011  edec (8r)

get processor number
0011 0111  proc

0011 1111  EXTENDED INSTRUCTION

move register
0100 rrrr  mov x, r
0101 rrrr  mov r, x

logic
0110 rrrr  and r
0111 rrrr  or r

arithmetic
1000 rrrr  add r  # r = r + x
1001 rrrr  adc r  # r = r + x + C
1010 rrrr  sub r  # r = r - x
1011 rrrr  sbc r  # r = r - x - ~C

logic
1100 rrrr  xor r

move immediate
1101 kkkk  mov x, k

branch
111k kkkk  br k
